{"version":3,"file":"vendors-node_modules_date-fns_esm_eachDayOfInterval_index_js-node_modules_date-fns_esm_format-513d86.js","mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","sources":["webpack://homework-7/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack://homework-7/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://homework-7/./node_modules/date-fns/esm/addMilliseconds/index.js","webpack://homework-7/./node_modules/date-fns/esm/eachDayOfInterval/index.js","webpack://homework-7/./node_modules/date-fns/esm/format/index.js","webpack://homework-7/./node_modules/date-fns/esm/isDate/index.js","webpack://homework-7/./node_modules/date-fns/esm/isValid/index.js","webpack://homework-7/./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack://homework-7/./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack://homework-7/./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack://homework-7/./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack://homework-7/./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack://homework-7/./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack://homework-7/./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack://homework-7/./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack://homework-7/./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack://homework-7/./node_modules/date-fns/esm/locale/en-US/index.js","webpack://homework-7/./node_modules/date-fns/esm/subMilliseconds/index.js","webpack://homework-7/./node_modules/date-fns/esm/toDate/index.js"],"sourcesContent":["export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import lightFormatters from \"../lightFormatters/index.js\";\nimport getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challange you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}"],"names":["addLeadingZeros","number","targetLength","sign","output","Math","abs","toString","length","lightFormatters","getUTCDayOfYear","getUTCISOWeek","getUTCISOWeekYear","getUTCWeek","getUTCWeekYear","dayPeriodEnum","am","pm","midnight","noon","morning","afternoon","evening","night","formatters","G","date","token","localize","era","getUTCFullYear","width","y","signedYear","year","ordinalNumber","unit","Y","options","signedWeekYear","weekYear","twoDigitYear","R","isoWeekYear","u","Q","quarter","ceil","getUTCMonth","String","context","q","M","month","L","w","week","I","isoWeek","d","getUTCDate","D","dayOfYear","E","dayOfWeek","getUTCDay","day","e","localDayOfWeek","weekStartsOn","c","i","isoDayOfWeek","a","hours","getUTCHours","dayPeriodEnumValue","dayPeriod","toLowerCase","b","B","h","H","K","k","m","getUTCMinutes","s","getUTCSeconds","S","X","_localize","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","timestamp","floor","getTime","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","toUpperCase","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","pow","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","dateTimeLongFormatter","matchResult","match","datePattern","timePattern","dateTimeFormat","dateTime","replace","longFormatters","p","P","getTimezoneOffsetInMilliseconds","utcDate","Date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","toDate","requiredArgs","MILLISECONDS_IN_DAY","dirtyDate","arguments","setUTCMonth","setUTCHours","startOfYearTimestamp","difference","startOfUTCISOWeek","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","MILLISECONDS_IN_WEEK","diff","round","toInteger","startOfUTCWeek","dirtyOptions","locale","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","RangeError","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","format","input","concat","required","args","TypeError","fourthOfJanuary","setUTCDate","firstWeek","localeWeekStartsOn","defaultWeekStartsOn","dirtyNumber","NaN","Number","isNaN","addMilliseconds","dirtyAmount","amount","eachDayOfInterval","dirtyInterval","interval","startDate","start","endDate","end","endTime","dates","currentDate","setHours","step","push","setDate","isValid","defaultLocale","subMilliseconds","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","formatterOptions","result","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","isDate","value","Object","prototype","call","buildFormatLongFn","undefined","defaultWidth","formats","buildLocalizeFn","dirtyIndex","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","index","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","findIndex","test","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","buildMatchPatternFn","parseResult","parsePattern","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","count","tokenValue","addSuffix","comparison","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","rem100","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","code","argument","argStr","console","warn","Error","stack"],"sourceRoot":""}